<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog - Jabez Tho on Jabez Tho</title><link>https://jabeztho.com/blog/</link><description>Recent content in Blog - Jabez Tho on Jabez Tho</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 06 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://jabeztho.com/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Automating AUR Package Maintenance with GitHub Actions</title><link>https://jabeztho.com/blog/automating-aur-package-maintenance-with-github-actions/</link><pubDate>Sat, 06 Jul 2024 00:00:00 +0000</pubDate><guid>https://jabeztho.com/blog/automating-aur-package-maintenance-with-github-actions/</guid><description>&lt;h3 id="sidenote">Sidenote:&lt;/h3>
&lt;p>I realized itâ€™s been five years since my last post, but oh well better late than never! Hopefully I can update this blog more consistently in the future.&lt;/p>
&lt;h1 id="problem">Problem&lt;/h1>
&lt;p>I&amp;rsquo;m the maintainer of &lt;a href="https://os.mbed.com/studio/">MbedStudio (an IDE for MbedOS)&lt;/a> on &lt;a href="https://wiki.archlinux.org/title/Arch_User_Repository">AUR (Arch User Repository)&lt;/a>. However, after moving to NixOS for my daily driver, I have neglected ensuring the package remains in sync with the latest upstream changes.&lt;/p>
&lt;p>The update process itself was relatively simple, when there&amp;rsquo;s a new version I&amp;rsquo;ll grab the latest tarball path from upstream and update my PKGBUILD (AUR shell script). The PKGBUILD does the patching required when users install it.&lt;/p></description></item><item><title>Using AWS Rekognition facial recognition with deeplens</title><link>https://jabeztho.com/blog/using-aws-rekognition-facial-recognition-with-deeplens/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>https://jabeztho.com/blog/using-aws-rekognition-facial-recognition-with-deeplens/</guid><description>&lt;p>Deeplens is a cool product from AWS, so called a &amp;ldquo;deep learning enabled video camera&amp;rdquo; that let you to deploy machine learning models easily to it, and run inference on the live feed. Kind of a like a Raspberry Pi with webcam, but much powerful and easier to setup(that&amp;rsquo;s if you are familiar with AWS).&lt;/p>
&lt;p>Face recognition, is a complex problem that takes several steps as mentioned in my previous post on &lt;a href="https://jabeztho.com/blog/using-aws-rekognition-for-face-recognition/">&amp;ldquo;Using AWS Rekognition For Face Recognition&amp;rdquo;&lt;/a>.&lt;/p></description></item><item><title>Using AWS Rekognition For Facial Recognition</title><link>https://jabeztho.com/blog/using-aws-rekognition-for-face-recognition/</link><pubDate>Wed, 11 Mar 2020 00:00:00 +0000</pubDate><guid>https://jabeztho.com/blog/using-aws-rekognition-for-face-recognition/</guid><description>&lt;p>Facial recognition is kind of neat, and had been quite widely use as a quick and dirty way of identifying an individual.&lt;/p>
&lt;p>Traditionally to implement Facial recognition we need to:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Identify Faces in an Image&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Extract features from the face&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Store the features from step 2 in a database, tagged with a name/index&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Repeat Step 1 and 2, and compare the new features with all the faces in the database using a classifier then you will get the desired name/index&lt;/p></description></item><item><title>SPOT - SIP</title><link>https://jabeztho.com/blog/spot-sip/</link><pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate><guid>https://jabeztho.com/blog/spot-sip/</guid><description>&lt;p>In our second year of study in Singapore Polytechnic (SP),
we are required to take a module called Social Innovation Project (SIP).&lt;/p>
&lt;p>SIP is a module to teach us the design thinking process. We focus on a particular group in the society and develop an appropriate solution/product to help them using the design thinking process. We had to conduct interviews, create a persona from the data we collected, make a prototype based on the persona, showcase our prototype in a gallery walk, and finally refine our prototype for our final presentation based on the feedback we received. Which is a pretty tedious process considering we only have 2 hours per week together.&lt;/p></description></item><item><title>AWS budget alert setup (email and sms)</title><link>https://jabeztho.com/blog/aws-budget-alert-setup/</link><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid>https://jabeztho.com/blog/aws-budget-alert-setup/</guid><description>&lt;p>As a newbie to AWS who is pretty broke,
it is kind of important not to overspend due to own negligence or ignorance in the services that AWS employs,
for example not shutting down instances, leak keys etc.
Having a budget alert would quickly notify you in real time when you start spending real money in AWS that is more than you are willing to.&lt;/p>
&lt;h1 id="steps">Steps&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>Sign in to AWS management console&lt;/p></description></item></channel></rss>